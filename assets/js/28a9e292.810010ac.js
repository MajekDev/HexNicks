"use strict";(self.webpackChunkhexnicks_docs=self.webpackChunkhexnicks_docs||[]).push([[475],{3596:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"config-options","title":"Configuration Options","description":"HexNicks\' config is documented fairly","source":"@site/docs/config-options.md","sourceDirName":".","slug":"/config-options","permalink":"/config-options","draft":false,"unlisted":false,"editUrl":"https://github.com/MajekDev/HexNicks/edit/main/docs/docs/config-options.md","tags":[],"version":"current","frontMatter":{"id":"config-options","title":"Configuration Options","slug":"/config-options"},"sidebar":"sidebar","previous":{"title":"Commands","permalink":"/commands"},"next":{"title":"Developers","permalink":"/developers"}}');var t=i(4848),o=i(8453);const r={id:"config-options",title:"Configuration Options",slug:"/config-options"},l="Config File Editing",a={},c=[{value:"Require Alphanumeric",id:"require-alphanumeric",level:2},{value:"Legacy Colors",id:"legacy-colors",level:2},{value:"Update Prompt",id:"update-prompt",level:2},{value:"Override Essentials",id:"override-essentials",level:2},{value:"<code>/nickother</code> Override",id:"nickother-override",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["HexNicks' ",(0,t.jsx)(n.a,{href:"https://github.com/MajekDev/HexNicks/blob/main/src/main/resources/config.yml",children:"config"})," is documented fairly\nwell but this page will try to explain some of the more confusing bits."]}),"\n",(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"config-file-editing",children:"Config File Editing"})}),"\n",(0,t.jsx)(n.p,{children:"You are now able to edit the plugin config file in your browser. Steps:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["First, execute ",(0,t.jsx)(n.code,{children:"/hexnicks config-editor new"})," to create a new pastebin with your config. The command will give you the link."]}),"\n",(0,t.jsx)(n.li,{children:"Then, make all your desired changes to the config in the pastebin."}),"\n",(0,t.jsx)(n.li,{children:"Make sure to press save in the upper left corner of the pastebin. You will get a new link (It should copy to your clipboard automatically)."}),"\n",(0,t.jsxs)(n.li,{children:["Take your new link and execute ",(0,t.jsx)(n.code,{children:"/hexnicks config-editor apply <link>"})," to apply your changes."]}),"\n",(0,t.jsx)(n.li,{children:"That's it! The plugin will automatically reload, and you're good to go."}),"\n"]}),"\n",(0,t.jsx)(n.h1,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.h2,{id:"require-alphanumeric",children:"Require Alphanumeric"}),"\n",(0,t.jsx)(n.p,{children:"This config option requires all nicknames to contain nothing but characters a-z, lower and upper case,\nand numbers. That does not include color codes, but the raw nickname you see in chat ignoring colors must\nonly contain alphanumeric characters."}),"\n",(0,t.jsx)(n.h2,{id:"legacy-colors",children:"Legacy Colors"}),"\n",(0,t.jsxs)(n.p,{children:["By default, legacy colors like ",(0,t.jsx)(n.code,{children:"&a"})," and ",(0,t.jsx)(n.code,{children:"&6"})," ",(0,t.jsx)(n.strong,{children:"will not work"}),". This is because they are ",(0,t.jsx)(n.strong,{children:"legacy"}),". However,\nbecause so many people like to use them, HexNicks does support them with this config option enabled."]}),"\n",(0,t.jsx)(n.h2,{id:"update-prompt",children:"Update Prompt"}),"\n",(0,t.jsx)(n.p,{children:"When this is enabled and the server isn't running the latest version of HexNicks, the plugin will send a message\nto any player who is an operator when they join saying that the plugin has an update available."}),"\n",(0,t.jsx)(n.h2,{id:"override-essentials",children:"Override Essentials"}),"\n",(0,t.jsxs)(n.p,{children:["Compatibility with ",(0,t.jsx)(n.a,{href:"https://github.com/EssentialsX/Essentials",children:"Essentials"})," has plagued HexNicks since it was\nreleased. Essentials just tries to do so many things it frequently causes conflicts. If this config options is\nenabled and Essentials is detected, HexNicks will set the player's Essentials nickname as well as their display\nname on nickname creation. This is just meant to prevent conflicts."]}),"\n",(0,t.jsx)(n.p,{children:"If HexNicks is doing something like setting tab names to nicknames even though that setting\nis disabled, you probably need to disable this."}),"\n",(0,t.jsxs)(n.h2,{id:"nickother-override",children:[(0,t.jsx)(n.code,{children:"/nickother"})," Override"]}),"\n",(0,t.jsxs)(n.p,{children:["When enabled, this allows players who have the ability to use ",(0,t.jsx)(n.code,{children:"/nickother"})," to override the target player's permissions for formatting codes."]}),"\n",(0,t.jsx)(n.p,{children:"This means you can now give someone a nickname using the color aqua even if they don't have permission to use that color."}),"\n",(0,t.jsxs)(n.p,{children:["If the config option is disabled then ",(0,t.jsx)(n.code,{children:"/nickother"})," will obey the target player's permissions for formatting."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var s=i(6540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);